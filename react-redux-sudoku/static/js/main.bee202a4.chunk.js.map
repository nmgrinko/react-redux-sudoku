{"version":3,"sources":["components/pages/contact/images/viber.svg","components/pages/contact/images/telegram.svg","components/pages/contact/images/github.svg","components/pages/contact/images/myLogo.svg","store/reducers/reducer.js","store/actions/actionCreators.js","utils/createConditions.js","store/store.js","utils/fieldСheck.js","components/pages/sudoku/block-item/BlockItem.js","store/actions/getData.js","store/actions/upDateSudoku.js","components/pages/sudoku/block/Block.js","components/pages/sudoku/field-sudoku/FieldSudoku.js","utils/createAnswer.js","utils/addConditions.js","store/actions/setFieldSudoku.js","components/pages/sudoku/Sudoku.js","store/actions/getValue.js","store/actions/clearFieldSudoku.js","store/actions/setOption.js","components/pages/contact/field-contact/FieldContact.js","components/pages/contact/Contact.js","components/pages/readme/slider/SliderReadme.js","store/actions/setIterationLimit.js","components/pages/readme/field-readme/FieldReadme.js","components/pages/readme/Readme.js","components/App.js","index.js"],"names":["module","exports","reducer","store","action","type","valueList","checkField","errorItem","setField","clearField","updateSudoku","conditions","iterationLimit","createConditions","idList","block","blockLine","i","Math","ceil","length","slice","vertical","dividedIdList","verticalLine","j","horizontal","horizontalLine","destructionVerticalLine","push","dataLine","concat","enhancer","window","__REDUX_DEVTOOLS_EXTENSION__","preloadedState","createStore","fieldСheck","sameValues","id","value","condition","indexOf","l","idItemCondition","mapDispatchToProps","getData","a","b","c","upDateSudoku","connect","state","props","indexId","valueId","style","includes","className","clear","inputMode","name","autoComplete","maxLength","onChange","event","target","replace","newValueList","Block","arrayTagBlockItem","key","blockItem","map","item","FieldSudoku","arrayTagBlock","createAnswer","valueListResult","idListUnoccupied","stopIteration","valueListError","charAt","console","log","diagonalCondition","setFieldSudoku","getValue","clearFieldSudoku","setOption","nameBtnSudoku","classicOptions","diagonOptions","initialStateBtnReadme","useState","stateBtnReadme","setStateBtnReadme","initialStateSpiner","class","text","newStateSpiner","stateSpiner","setStateSpiner","options","newConditions","role","onClick","onMouseDown","every","elem","fieldWork","fill","resetValues","update","to","html2canvas","document","querySelector","then","canvas","listCanvas","FieldContact","src","myLogo","alt","href","viber","telegram","github","nameBtnReadme","setIterationLimit","initialSlide","setLimit","newLimit","min","max","title","settings","dots","focusOnSelect","speed","slidesToShow","slidesToScroll","index","imgBase64","toDataURL","width","height","fontSize","FieldReadme","nameHeader","App","path","exact","component","Sudoku","Contact","Readme","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bee202a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/viber.4a0ee15e.svg\";","module.exports = __webpack_public_path__ + \"static/media/telegram.e5790f56.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.66f732da.svg\";","module.exports = __webpack_public_path__ + \"static/media/myLogo.b9482741.svg\";","import { GET_DATA, GET_VALUE, SET_FIELD_SUDOKU, CLEAR_FIELD_SUDOKU, UPDATE_SUDOKU, SET_OPTION, SET_ITERATION_LIMIT } from '../actions/actionCreators';\r\n\r\nconst reducer = (store, action) => {\r\n  switch (action.type) {\r\n    case GET_DATA:\r\n      return {\r\n        ...store, \r\n        valueList: action.valueList,\r\n        checkField: action.checkField,\r\n        errorItem:  action.errorItem\r\n      };\r\n      case GET_VALUE:\r\n      return {\r\n        ...store, \r\n        valueList: action.valueList\r\n      };\r\n      case SET_FIELD_SUDOKU:\r\n      return {\r\n        ...store, \r\n        setField: action.setField\r\n      };\r\n      case CLEAR_FIELD_SUDOKU:\r\n      return {\r\n        ...store, \r\n        clearField: action.clearField\r\n      };\r\n      case UPDATE_SUDOKU:\r\n      return {\r\n        ...store, \r\n        updateSudoku: action.updateSudoku\r\n      };\r\n      case SET_OPTION:\r\n      return {\r\n        ...store, \r\n        conditions: action.conditions\r\n      };\r\n      \r\n      case SET_ITERATION_LIMIT:\r\n      return {\r\n        ...store, \r\n        iterationLimit: action.iterationLimit\r\n      };\r\n    default: return store\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","export const GET_DATA = 'GET_DATA';\r\nexport const SET_FIELD_SUDOKU = 'SET_FIELD_SUDOKU';\r\nexport const CLEAR_FIELD_SUDOKU = 'CLEAR_FIELD_SUDOKU';\r\nexport const GET_VALUE = 'GET_VALUE';\r\nexport const UPDATE_SUDOKU = 'UPDATE_SUDOKU';\r\nexport const SET_OPTION = 'SET_OPTION';\r\nexport const SET_ITERATION_LIMIT='ITERATION_LIMIT';\r\n","\r\nconst createConditions = (idList) => {\r\n  const blockLine = () => {\r\n    let size = 9;\r\n    let blockLine = [];\r\n    for (let i = 0; i < Math.ceil(idList.length/size); i++) {\r\n      blockLine[i] = idList.slice((i*size), (i*size)+size);\r\n    }\r\n    return blockLine\r\n  }\r\n  const block = blockLine();\r\n  \r\n  const verticalLine = () => { \r\n    let size = 3; \r\n    let dividedIdList = [];\r\n    for (let i = 0; i < Math.ceil(idList.length/size); i++){\r\n      dividedIdList[i] = idList.slice((i*size), (i*size) + size);\r\n    }\r\n    \r\n    let verticalLine = [];\r\n    for (let j = 0; j < 9; j++){\r\n      if(j >= 0 && j <= 2){\r\n          verticalLine[j] = [...dividedIdList[j], ...dividedIdList[j+3], ...dividedIdList[j+6]];\r\n      }\r\n      if(j >= 3 && j <= 5){\r\n          verticalLine[j] = [...dividedIdList[j+6], ...dividedIdList[j+9], ...dividedIdList[j+12]];\r\n      }\r\n      if(j >= 6 && j <= 8){\r\n          verticalLine[j] = [...dividedIdList[j+12], ...dividedIdList[j+15], ...dividedIdList[j+18]];\r\n      }\r\n    }\r\n    return verticalLine\r\n  }\r\n  const vertical = verticalLine()\r\n\r\n  const horizontalLine = () => {\r\n  const horizontalLine = [];\r\n    for (let i = 0; i < vertical.length; i++){\r\n      const destructionVerticalLine = [];\r\n      for (let j = 0; j < vertical.length; j++){\r\n        destructionVerticalLine.push(vertical[j][i]);\r\n      }\r\n      horizontalLine[i] = destructionVerticalLine;\r\n    }\r\n    return horizontalLine\r\n  }\r\n  const horizontal = horizontalLine();\r\n \r\n  let dataLine = [];\r\n  dataLine = dataLine.concat(block);\r\n  dataLine = dataLine.concat(vertical);\r\n  dataLine = dataLine.concat(horizontal);\r\n  return  dataLine;\r\n}\r\n\r\nexport default createConditions","import { createStore } from \"redux\";\r\nimport reducer from './reducers/reducer'\r\nimport createConditions from '../utils/createConditions';\r\n\r\nconst enhancer = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nconst preloadedState = (() => {\r\n    const idList = [];\r\n    const valueList = [];\r\n    for (let i = 11; i <= 99; i++) {\r\n        if (i % 10 !== 0) {\r\n            idList.push('' + i);\r\n            valueList.push(0);\r\n        }\r\n    }\r\n    const conditions = createConditions(idList);  \r\n    return {iterationLimit: 10000,\r\n            checkField: false,\r\n            clearField: false,\r\n            updateSudoku: false,\r\n            idList: idList,\r\n            valueList: valueList,\r\n            conditions: conditions,\r\n            setField: [],\r\n            errorItem: []\r\n           }\r\n})()\r\n\r\nconst store = createStore(reducer, preloadedState, enhancer);\r\n\r\nexport default store\r\n\r\n\r\n","const fieldСheck = (idList, valueList, conditions) => {\r\n  let sameValues = [];\r\n  for (let i = 0; i < idList.length; i++) {\r\n    const id = idList[i];\r\n    const value = valueList[i];\r\n    if (value !== 0) {\r\n      for (let j = 0; j < conditions.length; j++) {\r\n        const condition = conditions[j];\r\n        const indexItemCondition = condition.indexOf(id);\r\n        if (indexItemCondition !== -1) {\r\n          for (let l = 0; l < condition.length; l++) {\r\n            const idItemCondition = condition[l];\r\n            if (id !== idItemCondition) {\r\n              const indexIdItemCondition = idList.indexOf(idItemCondition);\r\n              const valueItemCondition = valueList[indexIdItemCondition];\r\n              if (value === valueItemCondition) {\r\n                sameValues.push(id);\r\n              } \r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if(sameValues.length === 0) { \r\n    return [true, sameValues]\r\n  } else { \r\n      return [false, sameValues] \r\n    }\r\n}\r\n\r\nexport default fieldСheck\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './BlockItem.css';\r\nimport getData from '../../../../store/actions/getData';\r\nimport upDateSudoku from '../../../../store/actions/upDateSudoku';\r\nimport fieldСheck from '../../../../utils/fieldСheck';\r\n\r\n\r\nfunction BlockItem(props) {\r\n  const {id, idList, valueList, conditions, clearField, errorItem, updateSudoku, upDateSudoku, getData} = props;\r\n  const indexId = idList.indexOf(id);\r\n  const valueId = valueList[indexId];\r\n  const value = valueId !== 0 ? valueId : '';\r\n  const checkItem = (event) => {\r\n    const value = event.target.value.replace(/[^1-9]/, 0);\r\n    const {id} = event.target;\r\n    const indexId = idList.indexOf(id);\r\n    const newValueList = valueList;\r\n    newValueList[indexId] = +value;\r\n    const checkField = fieldСheck(idList, newValueList, conditions);\r\n    getData(newValueList, checkField[0], checkField[1]);\r\n    if (newValueList.includes(0)) {upDateSudoku(!updateSudoku)}\r\n  }\r\n  const style = (valueId === 'X') || (typeof(valueId) === \"number\") ? (errorItem.includes(id) ? 'block-item-div error': 'block-item-div') : 'block-item-div  error';  \r\n  \r\n  return(\r\n    <div className={style} id={id + id} clear={'' + clearField}>\r\n       <input type='text'\r\n              inputMode='numeric'\r\n              name='name'\r\n              value={value}              \r\n              autoComplete='off'\r\n              maxLength='1'\r\n              className='block-item-input'\r\n              id={id}\r\n              onChange={checkItem}\r\n       />\r\n    </div>\r\n  ) \r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    valueList: state.valueList,\r\n    idList: state.idList,\r\n    conditions: state.conditions,\r\n    clearField: state.clearField,\r\n    errorItem: state.errorItem,\r\n    updateSudoku: state.updateSudoku\r\n  }\r\n};\r\nconst mapDispatchToProps = {\r\n  getData: getData,\r\n  upDateSudoku: upDateSudoku\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BlockItem)\r\n\r\n\r\n\r\n      \r\n      \r\n\r\n\r\n","import { GET_DATA } from './actionCreators'\r\n\r\nconst getData = (a, b, c) => ({\r\n         type: GET_DATA, \r\n         valueList: a,\r\n         checkField: b,\r\n         errorItem: c   \r\n});\r\n\r\nexport  default getData\r\n","import { UPDATE_SUDOKU } from './actionCreators'\r\n\r\nconst upDateSudoku = (a) => ({\r\n         type: UPDATE_SUDOKU, \r\n         updateSudoku: a\r\n});\r\n\r\nexport  default upDateSudoku","import React from 'react';\r\nimport './Block.css'\r\nimport BlockItem from '../block-item/BlockItem'\r\n\r\nconst Block = (props) => {\r\n  const arrayTagBlockItem = [];\r\n    for(let i = 1; i < 10; i++){\r\n    const id = '' + props.id + i; // const id = '' + i + props.id; меняет метод перебора\r\n    arrayTagBlockItem.push(\r\n      <BlockItem key={id}  id={id}/>\r\n    )\r\n  }\r\n  const blockItem = arrayTagBlockItem.map((item) => item)\r\n  return(\r\n    <div className='block-div' id={props.id}>\r\n      {blockItem}\r\n    </div>\r\n  ) \r\n}\r\n\r\nexport default Block\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './FieldSudoku.css';\r\nimport Block from '../block/Block';\r\n\r\n\r\nconst FieldSudoku = () => {\r\n  const arrayTagBlock = [];\r\n  for(let i = 1; i < 10; i++){\r\n    arrayTagBlock.push(\r\n      <Block key={i}  id={i}/>\r\n    );\r\n  }\r\n  const block = arrayTagBlock.map((item) => item);\r\n  return(\r\n    <div className='field-sudoku-div' id='fieldSudoku'>\r\n      {block}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FieldSudoku\r\n\r\n","import fieldСheck from './fieldСheck'\r\n\r\nconst createAnswer = (idList, valueList, conditions, iterationLimit) => { \r\n\r\n   let valueListResult = valueList.concat();\r\n   let idListUnoccupied = [];\r\n   for (let i = 0; i < valueListResult.length; i++) {\r\n      if (valueListResult[i] === 0) {\r\n         idListUnoccupied.push(idList[i])\r\n      }\r\n   }\r\n   let stopIteration = 0;\r\n   for(let i = 0; i < idListUnoccupied.length; i++) {\r\n      if(stopIteration > iterationLimit) {\r\n         return valueListResult\r\n      }\r\n      const id = idListUnoccupied[i];\r\n      const indexId = idList.indexOf(id);\r\n      const value = valueListResult[indexId];\r\n      for(let j = value; j <= 9; j++) {\r\n         stopIteration = ++stopIteration;\r\n         if(j !== 9) {\r\n            valueListResult[indexId] = j + 1;\r\n            const resultFieldСheck = fieldСheck(idList, valueListResult, conditions);\r\n            if(resultFieldСheck[0]) { break };\r\n         } else {\r\n            valueListResult[indexId] = 0;\r\n            if(i === 0) { \r\n               const valueListError = valueListResult.map((item) => item === 0 ? 'X': item);\r\n               for(let l = 0; l < 9; l++) {\r\n                  const errorText = 'NOTRESULT';\r\n                  const id = l + 36;\r\n                  valueListError[id] = errorText.charAt(l);\r\n               }\r\n               return valueListError \r\n            };\r\n            i = i - 2;\r\n         }    \r\n      }\r\n   }\r\n   console.log('All Iterations: ', stopIteration);\r\n   return valueListResult\r\n}\r\n\r\nexport default createAnswer","const diagonalCondition = [['11', '15', '19', '51', '55', '59', '91', '95', '99'], \r\n                           ['33', '35', '37', '53', '55', '57', '73', '75', '77']]\r\n\r\nexport default diagonalCondition","import { SET_FIELD_SUDOKU } from './actionCreators'\r\n\r\nconst setFieldSudoku = (a) => ({\r\n            type: SET_FIELD_SUDOKU, \r\n            setField: a\r\n        });\r\n\r\nexport default setFieldSudoku","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {NavLink} from 'react-router-dom';\r\nimport html2canvas from 'html2canvas';\r\nimport './Sudoku.css';\r\nimport FieldSudoku from './field-sudoku/FieldSudoku';\r\nimport createAnswer from '../../../utils/createAnswer';\r\nimport diagonalCondition from '../../../utils/addConditions';\r\nimport getValue from '../../../store/actions/getValue';\r\nimport setFieldSudoku from '../../../store/actions/setFieldSudoku';\r\nimport clearFieldSudoku from '../../../store/actions/clearFieldSudoku';\r\nimport setOption from '../../../store/actions/setOption';\r\n\r\nconst Sudoku = (props) => {\r\n  const {valueList,\r\n         idList,\r\n         conditions,\r\n         iterationLimit,\r\n         checkField,\r\n         clearField,\r\n         setField,\r\n         getValue,\r\n         setFieldSudoku,\r\n         clearFieldSudoku,\r\n         updateSudoku,\r\n         setOption\r\n        } = props;\r\n  const nameBtnSudoku = valueList.includes(0) ? 'Get Result' : 'СLEAR';\r\n  const classicOptions = conditions.length > 27 ? \"btn btn-outline-secondary btn-style\" : \"btn btn-outline-success btn-style\";\r\n  const diagonOptions = conditions.length > 27 ? \"btn btn-outline-success btn-style\" : \"btn btn-outline-secondary btn-style\";\r\n  const initialStateBtnReadme = props.setField.length === 0 ? 'README' : 'SHOW';\r\n  const [stateBtnReadme, setStateBtnReadme] = useState(initialStateBtnReadme);\r\n  const initialStateSpiner = {class: 'loadingRol text-success', text: 'O'}\r\n  const newStateSpiner = {class: 'loadingRol text-success spinner-border', text: ''}\r\n  const [stateSpiner, setStateSpiner] = useState(initialStateSpiner);\r\n  const fieldWork = () => {\r\n    if (!valueList.every(elem => elem === 0)) {\r\n      if (checkField){\r\n        const newValueList = createAnswer(idList, valueList, conditions, iterationLimit);\r\n        getValue(newValueList);\r\n      } \r\n    }            \r\n  } \r\n  const sat_Field = () => {\r\n    html2canvas(document.querySelector(\"#fieldSudoku\")).then(canvas => {\r\n      const listCanvas = setField;\r\n      listCanvas.push(canvas);\r\n      setFieldSudoku(listCanvas);\r\n      setStateBtnReadme('SHOW');\r\n    }); \r\n  }\r\n  const resetValues = () => {\r\n    const newValueList = valueList;\r\n    newValueList.fill(0);\r\n    getValue(newValueList);\r\n    clearFieldSudoku(!clearField);\r\n  }\r\n  const onClick = () => {\r\n    if(valueList.includes(0)){\r\n      fieldWork();\r\n    } else {\r\n      resetValues();\r\n    }\r\n    setStateSpiner(initialStateSpiner)\r\n  }\r\n  const options = () => {\r\n    let newConditions = conditions;\r\n    if (conditions.length === 27) {\r\n      newConditions = newConditions.concat(diagonalCondition);\r\n    } else {\r\n      newConditions = newConditions.slice(0, 27);\r\n    }\r\n    setOption(newConditions);\r\n  }\r\n  const loading = () => {\r\n    setStateSpiner(newStateSpiner)\r\n  }\r\n  const name =  <span className=\"loading\">\r\n                  <div className={stateSpiner.class} role=\"status\"\r\n                    id='start'>\r\n                  </div>\r\n                  <h1 id='stop'>{stateSpiner.text}</h1>\r\n                </span>\r\n  return (\r\n    <div className=\"pages\">\r\n      <div className=\"sudoku-heder\">\r\n        <h1 className='title'>SUD</h1>{name}<h1 className='title'>KU</h1>\r\n      </div>\r\n      <FieldSudoku/>\r\n      <div>\r\n        <div>\r\n          <button type=\"button\" \r\n                  className={classicOptions}\r\n                  onClick={options}\r\n          >\r\n            сlassic\r\n          </button>       \r\n          <button className=\"btn btn-outline-success btn-style\"\r\n                    id='get'\r\n                    onMouseDown={loading}\r\n                    onClick={onClick}\r\n                    update={'' + updateSudoku}\r\n          > \r\n          {nameBtnSudoku}\r\n          </button>\r\n          <button type=\"button\" \r\n                  className={diagonOptions}\r\n                  onClick={options}\r\n          >\r\n            diagonals\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <NavLink to='/readme'>\r\n            <button type=\"button\" \r\n                    className=\"btn btn-outline-secondary btn-style\"        \r\n            >\r\n            {stateBtnReadme}\r\n            </button>\r\n          </NavLink>\r\n          <button type=\"button\" \r\n                  className=\"btn btn-outline-secondary btn-style\"\r\n                  onClick={sat_Field}\r\n          >\r\n            SAVE\r\n          </button>\r\n          <NavLink to='/contact'>\r\n            <button type=\"button\" \r\n                    className=\"btn btn-outline-secondary btn-style\"  \r\n            >\r\n              CONTACT\r\n            </button>\r\n           </NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    valueList: state.valueList,\r\n    idList: state.idList,\r\n    conditions: state.conditions,\r\n    checkField: state.checkField,\r\n    clearField: state.clearField,\r\n    setField: state.setField,\r\n    updateSudoku: state.updateSudoku,\r\n    iterationLimit: state.iterationLimit   \r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  getValue: getValue,\r\n  setFieldSudoku: setFieldSudoku,\r\n  clearFieldSudoku: clearFieldSudoku,\r\n  setOption: setOption\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sudoku)\r\n\r\n\r\n","import { GET_VALUE } from './actionCreators'\r\n\r\nconst getValue = (a) => ({\r\n         type: GET_VALUE, \r\n         valueList: a\r\n});\r\n\r\nexport  default getValue\r\n","import { CLEAR_FIELD_SUDOKU } from './actionCreators'\r\n\r\nconst clearFieldSudoku = (a) => ({\r\n         type: CLEAR_FIELD_SUDOKU, \r\n         clearField: a  \r\n});\r\n\r\nexport  default clearFieldSudoku","import { SET_OPTION } from './actionCreators'\r\n\r\nconst setOption = (a) => ({\r\n            type: SET_OPTION, \r\n            conditions: a\r\n        });\r\n\r\nexport default setOption","import React from 'react';\r\nimport './FieldContact.css';\r\nimport viber from '../images/viber.svg';\r\nimport telegram from '../images/telegram.svg';\r\nimport github from '../images/github.svg';\r\nimport myLogo from '../images/myLogo.svg';\r\n\r\n\r\nconst FieldContact = () => {\r\n  return(\r\n    <div className='field-contact-div'>\r\n      <img src={myLogo} className=\"myLogo\" alt=\"logo\" />\r\n      <h3 className=\"myName\">Nikolay Grinko</h3>\r\n      <div className=\"btn-contact\">\r\n      <a href=\"viber://add?number=375297191896\">\r\n        <img src={viber} className=\"btn-viber\" alt=\"viber\"/>\r\n      </a>\r\n      <a href=\"https://t.me/Nick_Grinko\">\r\n        <img src={telegram} className=\"btn-telegram\" alt=\"telegram\" />\r\n      </a>\r\n      <a href=\"https://github.com/nmgrinko\">\r\n        <img src={github} className=\"btn-github\" alt=\"github\" />\r\n      </a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FieldContact\r\n\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport './Contact.css';\r\nimport FieldContact from './field-contact/FieldContact';\r\n\r\n\r\nconst Contact = (props) => {\r\n  const nameBtnReadme = props.setField.length === 0 ? 'README' : 'SHOW';\r\n  return (\r\n    <div className=\"pages page-contact\">\r\n      <div className=\"contact-heder\">\r\n        <h1>\r\n          CONTACT\r\n        </h1>\r\n      </div>\r\n      <FieldContact />\r\n      <div className=\"contact-btn\"> \r\n        <NavLink to='/readme'>\r\n          <button type=\"button\" \r\n                  className=\"btn btn-outline-secondary btn-style\">\r\n            {nameBtnReadme}\r\n          </button>\r\n        </NavLink>\r\n        <NavLink to='/'>\r\n          <button className=\"btn btn-outline-success btn-style\">\r\n            SUDOKU\r\n          </button>\r\n        </NavLink>\r\n          <button type=\"button\" \r\n                  className=\"btn btn-outline-secondary btn-style\">\r\n            CONTACT\r\n          </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    setField: state.setField   \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Contact);\r\n","import React from 'react';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport './SliderReadme.css';\r\nimport { connect } from 'react-redux';\r\nimport setIterationLimit from '../../../../store/actions/setIterationLimit';\r\n\r\nconst SliderReadme = (props) => {\r\n  const {setField, \r\n         iterationLimit, \r\n         setIterationLimit\r\n  } = props;\r\n\r\n  let initialSlide = 0;\r\n  if (setField.length > 0) {\r\n    initialSlide = setField.length;\r\n  }\r\n  const rew = () => {\r\n    if (setField.length > 0) {\r\n      return setField.map((item, index) => {\r\n        const imgBase64 = item.toDataURL(\"image/jpeg\");\r\n        return <img src={imgBase64} alt=\"loadField\" \r\n                    width={item.style.width} \r\n                    height={item.style.height} \r\n                    key={index+100} />       \r\n      })          \r\n    } else {return null}\r\n  }\r\n\r\n  const getLimit = (event) => {\r\n    if(setField.length === 0) {\r\n    const newLimit = +event.target.value;\r\n    setIterationLimit(newLimit);\r\n    }\r\n  }\r\n  const setLimit = <input type='number' \r\n                          value={iterationLimit} \r\n                          onChange={getLimit}           \r\n                          autoComplete='off'\r\n                          min='1'\r\n                          max='100'\r\n                          title=''\r\n                          className='limit'\r\n                          />;\r\n  const settings = {\r\n    dots: false,\r\n    focusOnSelect: false,\r\n    speed: 600,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    initialSlide: initialSlide\r\n  };\r\n  return(\r\n    <Slider {...settings}>\r\n      {rew()}\r\n      <div className='info-readme-div'>\r\n        <h5>Information</h5>\r\n        <p className=\"text-justify\"> \r\n          &nbsp; Number puzzles appeared in newspapers in the \r\n          late 19th century, when French puzzle setters began \r\n          experimenting with removing numbers from magic squares.\r\n          However, the modern Sudoku only began to gain \r\n          widespread popularity in 1986 when it was published \r\n          by the Japanese puzzle company Nikoli under the name \r\n          <b> Sudoku</b>, meaning \"single number\". It first appeared \r\n          in a U.S. newspaper, and then The Times (London), \r\n          in 2004, thanks to the efforts of <em>Wayne Gould</em>,  who \r\n          devised a computer program to rapidly produce unique puzzles.\r\n          <br/>\r\n          &nbsp; This program solves and saves what Wayne Gould has done.\r\n        </p>\r\n        <h5>The program has a limitation:</h5>\r\n        <p style={{fontSize: '15px'}} className=\"text-justify\">\r\n          &nbsp;The limit of iterations is {setLimit} to save you time.\r\n        </p>\r\n      </div>\r\n    </Slider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  setField: state.setField,\r\n  iterationLimit: state.iterationLimit\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { setIterationLimit: setIterationLimit }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SliderReadme)","import { SET_ITERATION_LIMIT } from './actionCreators'\r\n\r\nconst setIterationLimit = (a) => ({\r\n         type: SET_ITERATION_LIMIT, \r\n         iterationLimit: a\r\n});\r\n\r\nexport  default setIterationLimit","import React from 'react';\r\nimport './FieldReadme.css';\r\nimport SliderReadme from '../slider/SliderReadme';\r\n\r\nconst FieldReadme = () => {\r\n  \r\n  return(\r\n    <div className='field-readme-div'>\r\n      <SliderReadme/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FieldReadme\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport './Readme.css';\r\nimport FieldReadme from './field-readme/FieldReadme';\r\nimport setFieldSudoku from '../../../store/actions/setFieldSudoku';\r\n\r\nconst Readme = (props) => {\r\n  const nameHeader = props.setField.length === 0 ? 'README' : 'SHOW';\r\n  const nameBtnReadme = props.setField.length === 0 ? 'README' : 'CLEAR';\r\n  const clearSlide = () => {props.setFieldSudoku([])}\r\n  return (\r\n    <div className=\"page-readme\">\r\n      <div className=\"readme-heder\">\r\n        <h1>\r\n          {nameHeader}\r\n        </h1>\r\n      </div>\r\n      <FieldReadme/>\r\n      <div>\r\n          <button type=\"button\" \r\n                  className=\"btn btn-outline-secondary btn-style\"\r\n                  onClick={clearSlide}>\r\n            {nameBtnReadme}\r\n          </button>\r\n        <NavLink to='/'>\r\n          <button className=\"btn btn-outline-success btn-style\">\r\n            SUDOKU\r\n          </button>\r\n        </NavLink>\r\n        <NavLink to='/contact'>\r\n          <button type=\"button\" \r\n                  className=\"btn btn-outline-secondary btn-style\">\r\n            CONTACT\r\n          </button>\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    setField: state.setField   \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { setFieldSudoku: setFieldSudoku }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Readme);\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {BrowserRouter, Switch,  Route, Redirect} from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../store/store';\r\nimport Sudoku from './pages/sudoku/Sudoku';\r\nimport Contact from './pages/contact/Contact';\r\nimport Readme from './pages/readme/Readme';\r\n\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path={'/'} exact component={Sudoku} />\r\n          <Route path={'/contact'} component={Contact} />\r\n          <Route path={'/readme'} component={Readme} />\r\n          <Redirect to={'/'} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </Provider> \r\n  )\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}